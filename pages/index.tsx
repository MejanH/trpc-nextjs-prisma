import { Inter } from "@next/font/google";
import Head from "next/head";
import { SyntheticEvent } from "react";
import { trpc } from "~/utils/trpc";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const posts = trpc.post.list.useQuery();
  console.log("posts ", posts.data);

  const addPostMutation = trpc.post.add.useMutation({});
  const deletePostMutation = trpc.post.delete.useMutation();

  const handleSubmit = async (event: SyntheticEvent) => {
    event.preventDefault();
    const target = event.target as typeof event.target & {
      title: { value: string };
      content: { value: string };
    };
    addPostMutation.mutate(
      {
        title: target.title.value,
        content: target.content.value,
      },
      {
        onSuccess: () => {
          posts.refetch();
        },
      }
    );
  };
  const handlePostDelete = (id: number) => {
    deletePostMutation.mutate(
      {
        id: id,
      },
      {
        onSuccess: () => {
          posts.refetch();
        },
      }
    );
  };

  return (
    <>
      <Head>
        <title>TRPC, Nextjs, Prisma</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="max-w-md mx-auto">
        <form className="my-10" onSubmit={handleSubmit}>
          <fieldset className="p-6 border-2 border-primary">
            <legend className="px-2 text-2xl font-semibold mb-4">
              Create Blog Post
            </legend>
            <div className="grid grid-cols-1 gap-5">
              <label htmlFor="title">Title</label>
              <input type="text" name="title" id="title" required />
              <label htmlFor="content">Content</label>
              <textarea rows={5} name="content" id="content" required />
              <button type="submit" className=" btn btn-primary btn-md">
                Submit
              </button>
            </div>
          </fieldset>
        </form>
        <h3 className="text-3xl font-semibold mb-5">All Blog Posts</h3>
        <div>
          {posts.data?.map((post) => (
            <div key={post.id} className="p-5 mb-5 border">
              <h4 className="text-2xl font-semibold mb-4">{post.title}</h4>
              <button
                className="link link-error"
                onClick={() => handlePostDelete(post.id)}
              >
                delete
              </button>
              <div>{post.content}</div>
            </div>
          ))}
        </div>
      </main>
    </>
  );
}
